# JMH version: 1.37
# VM version: JDK 23.0.1, Java HotSpot(TM) 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Program Files\Java\jdk-23\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\lib\idea_rt.jar=51246:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkBulkDelete

# Run progress: 0,00% complete, ETA 00:02:00
# Fork: 1 of 1
Iteration   1: 43,715 ms/op
Iteration   2: 45,809 ms/op
Iteration   3: 46,933 ms/op


Result "org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkBulkDelete":
  45,485 ±(99.9%) 29,791 ms/op [Average]
  (min, avg, max) = (43,715, 45,485, 46,933), stdev = 1,633
  CI (99.9%): [15,695, 75,276] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 23.0.1, Java HotSpot(TM) 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Program Files\Java\jdk-23\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\lib\idea_rt.jar=51246:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkBulkInsert

# Run progress: 25,00% complete, ETA 00:01:33
# Fork: 1 of 1
Iteration   1: 88326,878 ms/op
Iteration   2: 86080,170 ms/op
Iteration   3: 95772,856 ms/op


Result "org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkBulkInsert":
  90059,968 ±(99.9%) 9258,335 ms/op [Average]
  (min, avg, max) = (86080,170, 90059,968, 95772,856), stdev = 5073,435
  CI (99.9%): [? 0, 182618,303] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 23.0.1, Java HotSpot(TM) 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Program Files\Java\jdk-23\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\lib\idea_rt.jar=51246:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkBulkSearch

# Run progress: 50,00% complete, ETA 00:05:02
# Fork: 1 of 1
Iteration   1: 21,059 ms/op
Iteration   2: 19,830 ms/op
Iteration   3: 18,728 ms/op


Result "org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkBulkSearch":
  19,872 ±(99.9%) 2,268 ms/op [Average]
  (min, avg, max) = (18,728, 19,872, 21,059), stdev = 1,166
  CI (99.9%): [? 0, 41,140] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 23.0.1, Java HotSpot(TM) 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Program Files\Java\jdk-23\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\lib\idea_rt.jar=51246:C:\Program Files\JetBrains\IntelliJ IDEA 2024.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkMixedOperations

# Run progress: 75,00% complete, ETA 00:01:51
# Fork: 1 of 1
Iteration   1: 333,744 ms/op
Iteration   2: 756,405 ms/op
Iteration   3: 956,598 ms/op


Result "org.example.hashtable.ExtendibleHashTableBenchmark.benchmarkMixedOperations":
  682,249 ±(99.9%) 50,130 ms/op [Average]
  (min, avg, max) = (333,744, 682,249, 956,598), stdev = 317,980
  CI (99.9%): [? 0, 6483,379] (assumes normal distribution)


# Run complete. Total time: 00:06:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                              Mode  Cnt      Score       Error  Units
ExtendibleHashTableBenchmark.benchmarkBulkDelete       avgt    3     45,485 ±    29,791  ms/op
ExtendibleHashTableBenchmark.benchmarkBulkInsert       avgt    3  90059,968 ±  9258,335  ms/op
ExtendibleHashTableBenchmark.benchmarkBulkSearch       avgt    3     19,872 ±     2,268  ms/op
ExtendibleHashTableBenchmark.benchmarkMixedOperations  avgt    3    682,249 ±    50,130  ms/op

Process finished with exit code 0